


***********************************************************************************
class MainActivity : AppCompatActivity() {
 override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

      val  recyclerView:RecyclerView = findViewById(R.id.recycler_view_1);
        // ArrayList of class ItemsViewModel
    //    val data = ArrayList<ItemsViewModel>()

        // This loop will create 20 Views containing
        //viewpager

        // this creates a vertical layout Manager
        recyclerView.layoutManager = LinearLayoutManager(this)

        // ArrayList of class ItemsViewModel
        val data = ArrayList<ItemsViewModel>()

        // This loop will create 20 Views containing
        // the image with the count of view
        for (i in 1..20) {
            data.add(ItemsViewModel(R.drawable.ic_baseline_delete_24, "Item " + i))
        }

        // This will pass the ArrayList to our Adapter
        val adapter = CustomAdapter(this ,data)

        // Setting the Adapter with the recyclerview
        recyclerView.adapter = adapter


    }
}





********************************************************************************
package com.example.recyclerkotlin

import android.app.AlertDialog
import android.content.Context
import android.content.DialogInterface
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.ImageView
import android.widget.TextView
import android.widget.Toast
import androidx.recyclerview.widget.RecyclerView


class CustomAdapter(var context: Context, private var mList: ArrayList<ItemsViewModel>) : RecyclerView.Adapter<CustomAdapter.ViewHolder>() {


    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {

        val view = LayoutInflater.from(parent.context).inflate(R.layout.desine_item, parent, false)
        return ViewHolder(view, context)
    }

    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
        val ItemsViewModel = mList[position]
        // sets the image to the imageview from our itemHolder class
        holder.imageView.setImageResource(ItemsViewModel.image)
        // sets the text to the textview from our itemHolder class
        holder.textView.text = ItemsViewModel.text




        // set the data in items
        holder.textView.setOnClickListener(View.OnClickListener {
            val alertDialogBuilder: AlertDialog.Builder = AlertDialog.Builder(context)
            alertDialogBuilder.setTitle("Confirm Exit..!!!")
            // Icon Of Alert Dialog
            //   alertDialogBuilder.setIcon(R.drawable.question);
            // Setting Alert Dialog Message
            alertDialogBuilder.setMessage("Are you sure,You want to exit")
            alertDialogBuilder.setCancelable(false)
            alertDialogBuilder.setPositiveButton("Yes",
                DialogInterface.OnClickListener { arg0, arg1 -> deleteItem(position) })
            alertDialogBuilder.setNegativeButton("No",
                DialogInterface.OnClickListener { dialog, which ->
                    Toast.makeText(context, "You clicked over No", Toast.LENGTH_SHORT).show()
                    dialog.dismiss()
                })
            val alertDialog: AlertDialog = alertDialogBuilder.create()
            alertDialog.show()
        })
    }

    override fun getItemCount(): Int {
      return  mList.size
    }


    fun deleteItem(index: Int) {
 mList.removeAt(index)
         notifyItemRemoved(index);
    }


    class ViewHolder(ItemView: View, context: Context) : RecyclerView.ViewHolder(ItemView) {
        val imageView: ImageView = itemView.findViewById(R.id.img_view)
        val textView: TextView = itemView.findViewById(R.id.txt_view)
    }

}


********************************************************************************************
package com.example.recyclerkotlin

data  class ItemsViewModel(val image: Int, val text: String) {

}


**********************************************************************************************